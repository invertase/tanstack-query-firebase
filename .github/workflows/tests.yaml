name: Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

# Cancel in-progress runs when a new run is queued on the same branch
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  quality:
    runs-on: macos-latest
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Enable Corepack
        run: corepack enable

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Run format check
        run: pnpm format

  test:
    runs-on: macos-latest
    timeout-minutes: 30
    needs: quality
    strategy:
      matrix:
        node-version: [20, 22]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: "https://registry.npmjs.org"

      - name: Enable Corepack
        run: corepack enable

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Install Java
        run: |
          brew install openjdk@17
          sudo ln -sfn /usr/local/opt/openjdk@17/libexec/openjdk.jdk /Library/Java/JavaVirtualMachines/openjdk-17.jdk
          java -version

      - name: Cache Firebase emulators
        uses: actions/cache@v4
        with:
          path: ~/.cache/firebase/emulators
          key: ${{ runner.os }}-firebase-emulators-${{ hashFiles('.github/workflows/tests.yaml') }}
          restore-keys: |
            ${{ runner.os }}-firebase-emulators-

      - name: Install Firebase CLI
        uses: nick-invision/retry@v3
        with:
          timeout_minutes: 10
          retry_wait_seconds: 60
          max_attempts: 3
          command: npm i -g firebase-tools@latest

      # Determine which packages have changed
      - name: Determine changed packages
        id: changes
        uses: dorny/paths-filter@v2
        with:
          filters: |
            react:
              - 'packages/react/**'
            angular:
              - 'packages/angular/**'

      # Build packages before testing
      - name: Build packages
        run: pnpm turbo build

      # Verify build outputs
      - name: Verify build outputs
        run: |
          # Check all packages for dist directories
          MISSING_BUILDS=""
          for PKG_DIR in packages/*; do
            if [ -d "$PKG_DIR" ] && [ -f "$PKG_DIR/package.json" ]; then
              PKG_NAME=$(basename "$PKG_DIR")
              if [ ! -d "$PKG_DIR/dist" ]; then
                MISSING_BUILDS="$MISSING_BUILDS $PKG_NAME"
              fi
            fi
          done

          if [ -n "$MISSING_BUILDS" ]; then
            echo "❌ Build outputs not found for: $MISSING_BUILDS"
            exit 1
          fi
          echo "✅ All build outputs verified"

      # ✅ Generate Data Connect SDK before running emulators
      - name: Generate Data Connect SDKs
        run: firebase dataconnect:sdk:generate

      # Run tests with all emulators (auth, firestore, and data-connect)
      - name: Run tests with emulator
        run: pnpm test:emulator
